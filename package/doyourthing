#!/bin/bash

# Terminal color codes
RESET='\033[0m'
BOLD='\033[1m'
REVERSE='\033[7m'
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
BLUE='\033[34m'
MAGENTA='\033[35m'
CYAN='\033[36m'

# Terminal control codes
SAVE="\033[s"
UNSAVE="\033[u"
ERASE="\033[J"

# Successful/failed package install counts
SUCCESSFUL=0
FAILED=0

# The End
theend () {
   if [ $# -eq 0 ]; then
      printf "\n${BOLD}* Done! *${RESET}" | lolcat -S 175 -t 2> /dev/null
   elif [ $# -lt 2 ]; then
      printf "$1" | lolcat -S 175 -t 2> /dev/null
   else
      printf "$1" | lolcat -S "$2" -t 2> /dev/null
   fi

   printf "\n\n"
   printf " ${GREEN}${SUCCESSFUL}${RESET} installed\n ${RED}${FAILED}${RESET} failed\n"
}

# Catch SIGINT
interrupted () { theend "\n\n${BOLD}! Interrupted !${RESET}" 65; exit; }
trap interrupted SIGINT

# Save cursor position
printf "${SAVE}"

# Pass the title of the package as the first parameter and
# the install command as the second one
dyt () {
	# Get package name
	name=$1

	# Discard name parameter
	shift 1

   # Execute command list and return the overall result
	coproc myproc (
		typeset result

		for instruction in "$@"
		do
			eval "$instruction" &> /dev/null
			let "result+=$?"
		done

		# If every instruction is successful (returns 0) the command list is considered to be successful
		return $result
	)
	PID=$myproc_PID
   
   # Spinner
   local i=1
   sp="⣷⣯⣟⡿⢿⣻⣽⣾"
   echo -n ' '
   while [ -d /proc/$PID ]
   do
      printf "${UNSAVE}${ERASE}"
      printf " ${CYAN}${sp:i++%${#sp}:1}${RESET} ${BOLD}${name}${RESET}"
      
      sleep 0.15
   done
   
   # Unsave and erase
   printf "${UNSAVE}${ERASE}"
   
   # Check if it was successful
   if wait $PID;
   then
      let "SUCCESSFUL++"
      printf " ${GREEN}✓${RESET} ${BOLD}${name}${RESET}\n"
   else
      let "FAILED++"
      printf " ${RED}✗${RESET} ${BOLD}${name}${RESET}\n"
   fi
   
   # Save cursor position
   printf "${SAVE}"
}

# Pretty print a section title given as first param
title () {
   printf "$1\n\n"
	printf "${SAVE}"
}

# start from home dir
HOME=/home/milovangudelj
cd $HOME

title "Configurations..."

# Skip GRUB menu (boot options)
dyt "GRUB Menu" \
"search=\"GRUB_TIMEOUT=5\"" \
"replace=\"GRUB_TIMEOUT=0\nGRUB_TIMEOUT_STYLE=hidden\"" \
"sudo sed -i \"s/\$search/\$replace/g\" /etc/default/grub" \
"sudo grub2-mkconfig -o \"$(readlink -e /etc/grub2.cfg)\""

# Setup git
dyt "Git user config" \
"git config --global user.name milovangudelj" \
"git config --global user.email milovan.gudelj@gmail.com"

# Ctrl+Shift+Alt (Remove Gnome shortcut interfering with VS Code)
dyt "Ctrl+Shift+Alt" \
"gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-up \"['<Super><Shift>Page_Up']\"" \
"gsettings set org.gnome.desktop.wm.keybindings move-to-workspace-down \"['<Super><Shift>Page_Down']\""

echo
title "Miscellaneous..."

# Update before installing anything
dyt "DNF Update" "sudo dnf -q -y update"

# dnf utils / config manager
dyt "DNF Utils" "sudo dnf -q -y install dnf-utils 'dnf-command(config-manager)'"

# Aliases setup section
echo
title "Adding aliases..."

if ! grep -q "# Custom Aliases" $HOME/.bashrc; then
   sudo printf "\n# Custom Aliases\n" >> $HOME/.bashrc
fi

# cls
dyt "cls" \
"if ! grep -q \"alias cls\" $HOME/.bashrc; then
   printf \"alias cls='clear'\n\" >> $HOME/.bashrc
fi"

# ll
dyt "ll" \
"if ! grep -q \"alias ll\" $HOME/.bashrc; then
   printf \"alias ll='ls -la'\n\" >> $HOME/.bashrc
fi"

# myip
dyt "myip" \
"if ! grep -q \"alias myip\" $HOME/.bashrc; then
   printf \"alias myip='curl ipinfo.io/ip && echo'\n\" >> $HOME/.bashrc
fi"

# cmkb
dyt "cmkb" \
"if ! grep -q \"alias cmkb\" $HOME/.bashrc; then
   printf \"alias cmkb='cmake . -B build/ && cmake --build build/'\n\" >> $HOME/.bashrc
fi"

source $HOME/.bashrc &> /dev/null

# Repo installation section
echo
title "Adding repositories..."

# RPM Fusion - free
dyt "RPM Fusion - free" \
"sudo dnf -q -y install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm"

# RPM Fusion - nonfree
dyt "RPM Fusion - nonfree" \
"sudo dnf -q -y install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm"

# NordVPN
dyt "NordVPN" \
"sudo rpm --import https://repo.nordvpn.com/gpg/nordvpn_public.asc" \
"sudo dnf -q -y config-manager --add-repo https://repo.nordvpn.com/yum/nordvpn/centos"

# GitHub CLI
dyt "GitHub CLI" \
"sudo dnf -q -y config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo"

# MKVToolNix
dyt "MKVToolNix" \
"sudo rpm -U https://mkvtoolnix.download/fedora/bunkus-org-repo-2-4.noarch.rpm"

# Fish Shell
dyt "Fish Shell" \
"sudo dnf -q -y config-manager --add-repo https://download.opensuse.org/repositories/shells:fish/Fedora_34/shells:fish.repo"

# Brave Browser
dyt "Brave Browser" \
"sudo rpm --import https://brave-browser-rpm-release.s3.brave.com/brave-core.asc" \
"sudo dnf -q -y config-manager --add-repo https://brave-browser-rpm-release.s3.brave.com/x86_64/"

# pgAdmin
dyt "pgAdmin" \
"sudo rpm -U https://ftp.postgresql.org/pub/pgadmin/pgadmin4/yum/pgadmin4-fedora-repo-2-1.noarch.rpm"

# Update repo metadata
sudo dnf -q -y update

# Package managers installation section
echo
title "Adding package managers..."

# Snap
dyt "Snap (snap)" \
"sudo dnf -q -y -C install snapd" \
"if [[ ! -L \"/snap\" ]]; then
   sudo ln -s /var/lib/snapd/snap /snap
fi"

# Node.js
dyt "Node.js (npm)" "dnf -q -y -C module install nodejs:16"

# Package installation section
echo
title "Installing packages..."

# Development Tools
dyt "Development Tools" \
"sudo dnf groupinstall --disablerepo=\* --enablerepo=fedora,updates \"Development Tools\""

# GCC g++
dyt "GCC g++" \
"sudo dnf install gcc-g++"

# CMake
dyt "CMake" "sudo dnf -q -y -C install cmake"

# OpenCV
dyt "OpenCV" "cd $HOME/Downloads" \
"wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip" \
"sudo unzip opencv.zip -d /opt/opencv" \
"cd /opt/opencv" \
"sudo mkdir /build" \
"sudo cmake . -B build/" \
"sudo cmake --build build/" \
"cd /build" \
"sudo make install" \
"cd $HOME"

# Gedit
dyt "Gedit" "sudo dnf -q -y -C install gedit"

# Gnome Tweaks
dyt "Gnome Tweaks" "sudo dnf -q -y -C install gnome-tweaks"

# Audacity
dyt "Audacity" "sudo dnf -q -y -C install audacity"

# lolcat
dyt "lolcat" "sudo snap install lolcat"

# VS Code
dyt "VS Code" "sudo snap install code --classic"

# Sanity CLI
dyt "Sanity CLI" "sudo npm i @sanity/cli -g"

# create-next-app
dyt "create-next-app" "sudo npm i create-next-app -g"

# sass
dyt "sass" "sudo npm i sass -g"

# supabase
dyt "Supabase" "sudo npm i supabase -g"

# ts-node
dyt "ts-node" "sudo npm i ts-node -g"

# Vercel
dyt "Vercel" "sudo npm i vercel -g"

# Spotify
dyt "Spotify" "sudo snap install spotify"

# NordPass
dyt "NordPass" "sudo snap install nordpass"

# NordVPN
dyt "NordVPN" "sudo dnf -q -y -C install nordvpn"

# GitHub CLI
dyt "GitHub CLI" "sudo dnf -q -y -C install gh"

# VLC
dyt "VLC" "sudo dnf -q -y -C install vlc python-vlc"

# HandBrake
dyt "HandBrake" "sudo dnf -q -y -C install handbrake handbrake-gui"

# Aegisub
dyt "Aegisub" "sudo dnf -q -y -C install aegisub"

# MKVToolNix
dyt "MKVToolNix" "sudo dnf -q -y -C install mkvtoolnix mkvtoolnix-gui"

# Fish Shell
dyt "Fish Shell" \
"sudo dnf -q -y -C install fish" \
"sudo echo /usr/local/bin/fish | sudo tee -a /etc/shells" \
"sudo chsh -s /usr/local/bin/fish"

# uuid
dyt "uuid" "sudo dnf -q -y -C install uuid"

# WebP
dyt "WebP" "sudo dnf -q -y -C install libwebp"

# webp-pixbuf-loader
dyt "webp-pixbuf-loader" "sudo dnf -q -y -C install webp-pixbuf-loader"

# Brave Browser
dyt "Brave Browser" "sudo dnf -q -y -C install brave-browser"

# Fira Code fonts
dyt "Fira Code fonts" "sudo dnf -q -y -C install fira-code-fonts"

# OBS Studio
dyt "OBS Studio" "sudo dnf -q -y -C install kmod-v4l2loopback obs-studio"

# Zoom
dyt "Zoom" \
"cd $HOME/Downloads" \
"wget https://zoom.us/client/latest/zoom_x86_64.rpm" \
"sudo dnf -q -y -C install zoom_x86_64.rpm" \
"sudo rm zoom_x86_64.rpm" \
"cd $HOME"

# Postman
dyt "Postman" "sudo snap install postman"

# Slack
dyt "Slack" "sudo snap install slack"

# Discord
dyt "Discord" "sudo dnf -q -y -C install discord"

# MongoDB Compass
dyt "MongoDB Compass" \
"cd $HOME/Downloads" \
"wget https://downloads.mongodb.com/compass/mongodb-compass-1.32.2.x86_64.rpm" \
"sudo dnf -q -y -C install mongodb-compass-1.32.2.x86_64.rpm" \
"sudo rm mongodb-compass-1.32.2.x86_64.rpm" \
"cd $HOME"

# postgresql
dyt "PostgreSQL" \
"sudo dnf -q -y -C module reset postgresql -y" \
"sudo dnf -q -y -C module enable postgresql:14" \
"sudo dnf -q -y -C install vim postgresql-server postgresql"

# pgAdmin
dyt "pgAdmin" \
"sudo dnf -q -y -C install pgadmin4" \
"sudo /usr/pgadmin4/bin/setup-web.sh --yes"

# Signal
dyt "Signal" "sudo snap install signal-desktop"

# Viber
dyt "Viber" \
"cd $HOME/Downloads" \
"wget https://download.cdn.viber.com/desktop/Linux/viber.AppImage" \
"sudo chmod +x viber.AppImage" \
"sudo ./viber.AppImage" \
"sudo rm viber.AppImage" \
"cd $HOME"

# libreoffice
dyt "libreoffice" "sudo dnf -q -y -C install libreoffice"

# unrar
dyt "unrar" "sudo dnf -q -y -C install unrar"

# Java SE 18 Development Kit
dyt "Java SE 18 Development Kit" \
"cd $HOME/Downloads" \
"wget https://download.oracle.com/java/18/latest/jdk-18_linux-x64_bin.rpm" \
"sudo rpm -ivh jdk-18_linux-x64_bin.rpm" \
"sudo rm jdk-18_linux-x64_bin.rpm" \
"cd $HOME"

# Kdenlive
dyt "Kdenlive" "sudo dnf -q -y -C install kdenlive"

# ASCII Art Library
dyt "ASCII Art Library" "sudo dnf -q -y -C install aalib"

# gphoto2 libgphoto2-devel
dyt "Gphoto" "sudo dnf -q -y -C install gphoto2 libgphoto2-devel"

# ffmpeg
dyt "FFmpeg" "sudo dnf -q -y -C install ffmpeg"

# v4l2loopback
dyt "v4l2loopback" "sudo dnf -q -y -C install v4l2loopback"

# libtool
dyt "libtool" "sudo dnf -q -y -C install libtool-ltdl-devel"

# xdotool
dyt "xdotool" "sudo dnf -q -y -C install xdotool"

# wmctrl
dyt "wmctrl" "sudo dnf -q -y -C install wmctrl"

# RPM publishing utils
dyt "RPM utils" "sudo dnf -q -y -C install gcc dpkg-dev gpg"

# rpmdevtools
dyt "rpmdevtools" "sudo dnf -q -y -C install rpmdevtools rpmlint"

# libusb
dyt "libusb" "sudo dnf -q -y -C install libusb-devel"

# qBittorrent
dyt "qBittorrent" "sudo dnf -q -y -C install qbittorrent"

# Steam
dyt "Steam" "sudo dnf -q -y -C install steam"

# The End

theend "\n${BOLD}* Done! *${RESET}" 175